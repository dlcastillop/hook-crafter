#!/usr/bin/env node
import{Command as u}from"commander";import{copy as k}from"fs-extra";import{dirname as y,resolve as p}from"path";import{fileURLToPath as w}from"url";import P from"prompts";import n from"chalk";var c={error(...o){console.log(n.red(...o))},warn(...o){console.log(n.yellow(...o))},info(...o){console.log(n.cyan(...o))},success(...o){console.log(n.green(...o))},break(){console.log("")}};import{readJSONSync as l,writeJSONSync as g}from"fs-extra";import{dirname as f,resolve as d}from"path";import{fileURLToPath as h}from"url";var m=(o,t)=>{let a=f(h(import.meta.url)),r=d(a,t,"package.json"),e=l(r);e.name=o,g(r,e,{spaces:2})};process.on("SIGINT",()=>process.exit(0));process.on("SIGTERM",()=>process.exit(0));async function S(){new u().name("create-hook-crafter").description("Set up your React hook library in seconds").action(async()=>{let{path:t}=await P({type:"text",name:"path",message:"Project name:",instructions:!1}),a=y(w(import.meta.url)),r=p(a,"../template"),e=p(process.cwd(),`${t}`),s=t.split("/"),i=s[s.length-1];try{await k(r,e)}catch{c.error("Error copying template. Exiting.")}m(i,e)}).parse()}S();
//# sourceMappingURL=index.js.map